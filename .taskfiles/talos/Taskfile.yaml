---
version: "3"

vars:
  TALHELPER_SECRET_FILE: "{{.TALOS_DIR}}/talsecret.sops.yaml"
  TALHELPER_CONFIG_FILE: "{{.TALOS_DIR}}/talconfig.yaml"


env:
  TALOSCONFIG: "{{.TALOS_DIR}}/clusterconfig/talosconfig"

tasks:

  generate-secret:
    desc: Generate Talos secret
    prompt: This will overwrite the existing secret... continue?
    dir: "{{.TALOS_DIR}}"
    cmds:
    - talhelper gensecret > {{.TALHELPER_SECRET_FILE}}
    - sops --encrypt --in-place {{.TALHELPER_SECRET_FILE}}
    preconditions:
    - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  generate-clusterconfig:
    desc: Generate Talos config
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper genconfig
    preconditions:
    - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  apply-config:
    desc: Apply Talos config to the nodes
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand apply | bash

  bootstrap:
    desc: Bootstrap the Talos cluster
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand bootstrap | bash

  kubeconfig:
    desc: Generate Talos kubeconfig
    prompt: This will overwrite the existing kubeconfig... continue?
    dir: "{{.TALOS_DIR}}"
    cmd: talosctl kubeconfig {{.ROOT_DIR}} --force --nodes 192.168.10.41

  apply-extras:
    desc: Apply extras
    cmds:
    - for: { var: apps }
      task: .bootstrap-helm-app
      vars:
        app: "{{.ITEM}}"
    vars:
      apps: cilium kubelet-csr-approver

  reset-nodes:
    desc: Reset a specific node
    prompt: This will reset all nodes... continue?
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand reset | bash

  .bootstrap-helm-app:
    internal: true
    dir: "{{.TALOS_DIR}}/apps/{{.app}}"
    cmds:
    - kubectl kustomize --enable-helm . | kubectl apply --validate=false --server-side --filename -
    - defer: rm -rf ./charts
    requires:
      vars: ["app"]
