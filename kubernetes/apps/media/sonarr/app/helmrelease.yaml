---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false

    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
            - 65539
            - 1030

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.5.1740@sha256:3890ecfb9628a528b2e8c511addc08ed5b875868d8e72bcbc9a1828af477444d
            env:
              TZ: America/New_York
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: https://sonarr.${EXTERNAL_DNS_1_DOMAIN}
              SONARR__LOG_LEVEL: info
              SONARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: SONARR_API_KEY
            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1
            args:
            - sonarr
            env:
            - name: URL
              value: "http://localhost:8989"
            - name: CONFIG
              value: "/config/config.xml"
            - name: PORT
              value: &metricsPort 9710
            - name: ENABLE_ADDITIONAL_METRICS
              value: true
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: starr-apps-secret
                  key: SONARR_API_KEY
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    ingress:
      *app :
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:television-classic"
          nginx.ingress.kubernetes.io/whitelist-source-range: "${INGRESS_INTERNAL_ONLY_CIDR}"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
        - host: &host sonarr.${EXTERNAL_DNS_1_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
            service:
              identifier: *app
              port: *port

    persistence:
      media:
        existingClaim: nfs-media
        advancedMounts:
          *app :
            *app :
            - path: /media

      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
        - path: /config

      backups:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDRESS}"
            path: /volume1/backups/radarr
        advancedMounts:
          *app :
            *app :
            - path: /config/backup
              readOnly: false

    serviceMonitor:
      metrics:
        serviceName: *app
        endpoints:
        - port: metrics
          scheme: http
          path: /metrics
          interval: 10m
          scrapeTimeout: 10s
