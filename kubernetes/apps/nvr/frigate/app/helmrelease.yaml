---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false

    service:
      *app :
        controller: *app
        annotations:
          io.cilium/lb-ipam-ips: ${SERVICE_ADDRESS_FRIGATE}
          k8s.v1.cni.cncf.io/networks: |
            [{
              "name":"multus-iot",
              "namespace": "networking",
              "ips": [ "192.168.4.32/22" ],
              "mac": "52:55:40:71:4f:2a"
            }]
        ports:
          http:
            port: &httpPort 5000
          rtsp:
            port: &rtspPort 8554
          webrtc:
            port: &webrtcPort 8555

    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          nodeSelector:
            google.feature.node.kubernetes.io/coral: "true"
            intel.feature.node.kubernetes.io/gpu: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: "0.13.2"
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
            securityContext:
              privileged: true
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *httpPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *httpPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *httpPort
                  failureThreshold: 30
                  periodSeconds: 10

    ingress:
      *app :
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:cctv
          nginx.ingress.kubernetes.io/whitelist-source-range: "${INGRESS_INTERNAL_ONLY_CIDR}"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
        - host: &host frigate.${EXTERNAL_DNS_1_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
            service:
              identifier: *app
              port: *httpPort

    persistence:
      usb:
        type: hostPath
        hostPath: /dev/bus/usb

      database:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          *app :
            *app :
            - path: /db

      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 512Mi
        globalMounts:
        - path: /dev/shm

      config:
        type: configMap
        name: frigate-config
        advancedMounts:
          *app :
            *app :
            - path: /config/config.yaml
              subPath: config.yaml
              readOnly: true

      recordings:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDRESS}"
            path: /volume1/batcave-nvr/recordings
        advancedMounts:
          *app :
            *app :
            - path: /media/frigate/recordings
              readOnly: false

      clips:
        type: custom
        volumeSpec:
          nfs:
            server: "${SYNOLOGY_ADDRESS}"
            path: /volume1/batcave-nvr/clips
        advancedMounts:
          *app :
            *app :
            - path: /media/frigate/clips
              readOnly: false
